{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/enricrypto/git2020/smarthub_local_mobile/components/SendForm.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Modal from \"./Modal\";\nimport { useForm } from \"react-hook-form\";\nimport { createAndSendRawTransaction, getFee } from \"../lib/sapi\";\nimport { isAddress, isPK } from \"../lib/smart\";\nimport useModal from \"../util/useModal\";\nimport barcode from \"../assets/images/barcode.svg\";\nimport { WebView, Linking } from 'react-native-webview';\n\nfunction ShowSend(_ref) {\n  var _this = this;\n\n  var balance = _ref.balance,\n      privateKey = _ref.privateKey;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    return Alert.alert('Form Data', data);\n  };\n\n  React.useEffect(function () {\n    register({\n      name: 'address'\n    }, {\n      required: true\n    });\n    register({\n      name: 'amount'\n    }, {\n      required: true\n    });\n    register({\n      name: 'privateKey'\n    }, {\n      required: true\n    });\n  }, [register]);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.contentCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.adress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Adress to Send\"), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      _this.setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.qr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Modal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  })))), React.createElement(TextInput, {\n    style: styles.text,\n    onChangeText: function onChangeText(text) {\n      return setValue('address', text, true);\n    },\n    ref: register({\n      required: true,\n      validate: function validate(value) {\n        var isValid;\n        return _regeneratorRuntime.async(function validate$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                isValid = false;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(isAddress(value).then(function (data) {\n                  isValid = true;\n                }).catch(function (error) {\n                  setError(\"addressTo\", \"invalid\", \"Invalid address\");\n                }));\n\n              case 3:\n                return _context.abrupt(\"return\", isValid);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }),\n    onInput: function onInput() {\n      return triggerValidation(\"addressTo\");\n    },\n    placeholder: \"________________________________________________\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.contentCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Amount to Send\"), React.createElement(TextInput, {\n    style: styles.text,\n    onChangeText: function onChangeText(text) {\n      return setValue('amount', text, true);\n    },\n    ref: register({\n      required: true,\n      validate: function validate(value) {\n        if (value > balance) {\n          setError(\"amount\", \"invalid\", \"Exceeds balance\");\n          return false;\n        }\n\n        if (value < 0.001) {\n          setError(\"amount\", \"invalid\", \"The minimum amount to send is 0.001\");\n          return false;\n        }\n\n        if (!value.match(/^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:((\\.)\\d{0,8})+)?$/)) {\n          setError(\"amount\", \"invalid\", \"Invalid format. e.g. 0,000.00000000\");\n          return false;\n        }\n      }\n    }),\n    onInput: function _callee(e) {\n      var _e$target;\n\n      var amount;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              amount = e == null ? void 0 : (_e$target = e.target) == null ? void 0 : _e$target.value;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(triggerValidation(\"amount\").then(function (data) {\n                return data && getFeeFromSAPI(amount);\n              }));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    placeholder: \"________________________________________________\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), errors.amount && React.createElement(Text, {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, errors.amount.message)), fee && React.createElement(View, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Fee: \", fee), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Amount with fee: \", Number(getValues(\"amount\")) + fee)), !privateKey ? React.createElement(View, {\n    style: styles.contentCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.adress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Your private Key\"), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      _this.setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.qr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, React.createElement(Modal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  })))), React.createElement(TextInput, {\n    style: styles.text,\n    onChangeText: function onChangeText(text) {\n      return setValue('privateKey', text, true);\n    },\n    ref: register({\n      required: true,\n      validate: function validate(value) {\n        var isValid;\n        return _regeneratorRuntime.async(function validate$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                isValid = false;\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(isPK(value).then(function (data) {\n                  return isValid = true;\n                }).catch(function (error) {\n                  setError(\"privateKey\", \"invalid\", \"Invalid Private Key\");\n                }));\n\n              case 3:\n                return _context3.abrupt(\"return\", isValid);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }),\n    placeholder: \"________________________________________________\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })) : null, React.createElement(View, {\n    style: styles.Button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: 'Send',\n    disabled: loading || !formState.isValid,\n    onPress: function onPress() {\n      handleSubmit();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  })), errors.privateKey && React.createElement(Text, {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, errors.privateKey.message));\n}\n\nfunction ShowBalance() {\n  return React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, \"Your Balance: \");\n}\n\nfunction ShowTransactions() {\n  return React.createElement(Text, {\n    style: styles.Transactions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }, \"Show Transactions \");\n}\n\nexport default function SendForm(_ref2) {\n  var _this2 = this;\n\n  var address = _ref2.address,\n      balance = _ref2.balance,\n      privateKey = _ref2.privateKey,\n      withdraw = _ref2.withdraw;\n\n  var _useModal = useModal(false),\n      isShowing = _useModal.isShowing,\n      toggle = _useModal.toggle;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      txid = _useState2[0],\n      setTxId = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fee = _useState4[0],\n      setFee = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      type = _useState8[0],\n      setType = _useState8[1];\n\n  var url = \"https://insight.smartcash.cc/tx/\" + txid;\n\n  var _useForm2 = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      amount: withdraw ? Number(balance - 0.002).toFixed(4) : null\n    }\n  }),\n      register = _useForm2.register,\n      handleSubmit = _useForm2.handleSubmit,\n      errors = _useForm2.errors,\n      setError = _useForm2.setError,\n      setValue = _useForm2.setValue,\n      formState = _useForm2.formState,\n      triggerValidation = _useForm2.triggerValidation,\n      getValues = _useForm2.getValues;\n\n  React.useEffect(function () {\n    register({\n      name: 'addressOrPrivateKey'\n    }, {\n      required: true\n    });\n  }, [register]);\n\n  var onSubmit = function onSubmit(data) {\n    setLoading(true);\n    createAndSendRawTransaction(data == null ? void 0 : data.addressTo, Number(data == null ? void 0 : data.amount), String(privateKey || (data == null ? void 0 : data.privateKey))).then(function (data) {\n      return setTxId(data == null ? void 0 : data.txid);\n    }).catch(function (error) {\n      var _error$;\n\n      return setError((_error$ = error[0]) == null ? void 0 : _error$.message);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  };\n\n  var getFeeFromSAPI = function getFeeFromSAPI(amount) {\n    getFee(Number(amount), address).then(function (fee) {\n      setFee(fee);\n\n      if (fee && Number(getValues(\"amount\")) + fee > balance) {\n        setError(\"amount\", \"invalid\", \"Requested amount exceeds balance\");\n      }\n    });\n  };\n\n  if (setTxId) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, \"Amount has been sent\"), React.createElement(WebView, {\n      ref: function ref(_ref3) {\n        webview = _ref3;\n      },\n      source: {\n        url: url\n      },\n      onNavigationStateChange: function onNavigationStateChange(event) {\n        if (event.url !== url) {\n          _this2.webview.stopLoading();\n\n          Linking.openURL(event.url);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, txid, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, \"(click to view details)\")), React.createElement(Button, {\n      title: \"Refress\",\n      onClick: function onClick() {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, \"Refresh Page\"));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"formGroup\",\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.adress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.adress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, \"Your Address or Private Key\"), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      _this2.setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.qr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, React.createElement(Modal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  })))), React.createElement(TextInput, {\n    style: styles.text,\n    onChangeText: function onChangeText(text) {\n      return setValue('addressOrPrivateKey', text, true);\n    },\n    autoComplete: \"off\",\n    ref: register({\n      required: true\n    }),\n    onInput: function onInput() {\n      return triggerValidation(\"addressTo\");\n    },\n    placeholder: \"________________________________________________\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.ShowContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, React.createElement(ShowBalance, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, React.createElement(ShowTransactions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.contentCard,\n    style: styles.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, React.createElement(ShowSend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  })))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f1f1f1'\n  },\n  ShowContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 5\n  },\n  Transactions: {\n    backgroundColor: '#f1f1f1',\n    shadowOffset: {\n      width: -1,\n      height: 5\n    },\n    shadowOpacity: 0.09,\n    padding: 10,\n    marginTop: -10\n  },\n  text: {\n    padding: 10,\n    color: 'rgba(0,0,0,0.6)',\n    fontSize: 15,\n    lineHeight: 20\n  },\n  Balance: {\n    marginLeft: 10,\n    marginTop: 1,\n    marginBottom: 5\n  },\n  adress: {\n    marginTop: '2%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  qr: {\n    backgroundColor: '#fff'\n  },\n  Button: {\n    borderRadius: 50\n  },\n  card: {\n    marginTop: 10,\n    marginBottom: 20,\n    marginLeft: 12,\n    marginRight: 12,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: -1,\n      height: 2\n    },\n    shadowOpacity: 0.26,\n    shadowRadius: 5,\n    backgroundColor: '#fff',\n    padding: 20\n  },\n  contentCard: {\n    marginBottom: 20,\n    backgroundColor: '#fff',\n    padding: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: -1,\n      height: 10\n    },\n    shadowOpacity: 0.09\n  }\n});","map":{"version":3,"sources":["/Users/enricrypto/git2020/smarthub_local_mobile/components/SendForm.js"],"names":["React","useState","ScrollView","Modal","useForm","createAndSendRawTransaction","getFee","isAddress","isPK","useModal","barcode","WebView","Linking","ShowSend","balance","privateKey","register","setValue","handleSubmit","errors","onSubmit","data","Alert","alert","useEffect","name","required","styles","contentCard","adress","setModalVisible","modalVisible","qr","text","validate","value","isValid","then","catch","error","setError","triggerValidation","match","e","amount","target","getFeeFromSAPI","message","fee","Number","getValues","Button","loading","formState","ShowBalance","ShowTransactions","Transactions","SendForm","address","withdraw","isShowing","toggle","txid","setTxId","setFee","setLoading","type","setType","url","mode","defaultValues","toFixed","addressTo","String","finally","ref","webview","event","stopLoading","openURL","container","card","ShowContent","StyleSheet","create","flex","backgroundColor","flexDirection","justifyContent","padding","shadowOffset","width","height","shadowOpacity","marginTop","color","fontSize","lineHeight","Balance","marginLeft","marginBottom","borderRadius","marginRight","shadowColor","shadowRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableHighlight,\n  Button,\n  KeyboardAvoidingView\n} from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Modal from './Modal';\n\nimport { useForm } from \"react-hook-form\";\nimport { createAndSendRawTransaction, getFee } from \"../lib/sapi\";\nimport { isAddress, isPK } from \"../lib/smart\";\nimport useModal from \"../util/useModal\";\nimport barcode from \"../assets/images/barcode.svg\";\nimport { WebView, Linking } from 'react-native-webview';\n\n\nfunction ShowSend({  balance, privateKey }){\n  const { register, setValue, handleSubmit, errors } = useForm();\n  const onSubmit = data => Alert.alert('Form Data', data);\n\n  React.useEffect(() => { \n    register({ name: 'address'}, { required: true });\n    register({ name: 'amount'}, { required: true });\n    register({ name: 'privateKey'}, { required: true });\n    \n  }, [register]);\n  return(\n    <View>\n\n      <View style={styles.contentCard}>\n\n        <View style={styles.adress}>\n          <Text>Adress to Send</Text>\n          <TouchableHighlight\n            onPress={() => {\n              this.setModalVisible(!modalVisible);\n            }}\n            >\n            <View style={styles.qr}>\n              <Modal/>\n            </View>                \n          </TouchableHighlight>\n        </View>\n\n        <TextInput \n          style={styles.text}\n          onChangeText={text => setValue('address', text, true)}\n          ref={register({\n            required: true,\n            validate: async (value) => {\n              let isValid = false;\n              await isAddress(value)\n                .then((data) => {\n                  isValid = true;\n                })\n                .catch((error) => {\n                  setError(\"addressTo\", \"invalid\", \"Invalid address\");\n                });\n              return isValid;\n            },\n          })}  \n          onInput={() => triggerValidation(\"addressTo\")}\n          placeholder=\"________________________________________________\">\n            \n        </TextInput>\n        \n      </View>\n\n      <View style={styles.contentCard}>\n        <Text>Amount to Send</Text>\n        <TextInput style={styles.text}\n          onChangeText={text => setValue('amount', text, true)}\n          ref={register({\n            required: true,\n            validate: (value) => {\n              if (value > balance) {\n                setError(\"amount\", \"invalid\", \"Exceeds balance\");\n                return false;\n              }\n              if (value < 0.001) {\n                setError(\n                  \"amount\",\n                  \"invalid\",\n                  \"The minimum amount to send is 0.001\"\n                );\n                return false;\n              }\n              if (\n                !value.match(\n                  /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:((\\.)\\d{0,8})+)?$/\n                )\n              ) {\n                setError(\n                  \"amount\",\n                  \"invalid\",\n                  \"Invalid format. e.g. 0,000.00000000\"\n                );\n                return false;\n              }\n            },\n          })}\n          onInput={async (e) => {\n            const amount = e?.target?.value;\n            await triggerValidation(\"amount\").then(\n              (data) => data && getFeeFromSAPI(amount)\n            );\n          }}\n          placeholder=\"________________________________________________\">\n        </TextInput>\n        \n        {errors.amount && (\n          <Text className=\"error-message\">{errors.amount.message}</Text>\n        )}\n      </View>\n      {fee && (\n          <View style={styles.text}>\n            <Text>Fee: {fee}</Text>\n            <Text>Amount with fee: {Number(getValues(\"amount\")) + fee}</Text>\n          </View>\n        )}\n\n      {\n        !privateKey ? (\n      <View style={styles.contentCard}>\n\n        <View style={styles.adress}>\n          <Text>Your private Key</Text>\n\n          <TouchableHighlight\n            onPress={() => {\n              this.setModalVisible(!modalVisible);\n            }}\n            >\n            <View style={styles.qr}>\n              <Modal/>\n            </View>                \n          </TouchableHighlight>\n        </View>\n\n        <TextInput \n          style={styles.text}\n          onChangeText={text => setValue('privateKey', text, true)}\n          ref={register({\n            required: true,\n            validate: async (value) => {\n              let isValid = false;\n              await isPK(value)\n                .then((data) => (isValid = true))\n                .catch((error) => {\n                  setError(\"privateKey\", \"invalid\", \"Invalid Private Key\");\n                });\n              return isValid;\n            },\n          })}\n          placeholder=\"________________________________________________\">\n        </TextInput>\n        \n      </View>\n        )\n        : null\n      }\n      <View style={styles.Button}>\n        <Button title={'Send'} \n         disabled={loading || !formState.isValid}\n          onPress={() => {\n            handleSubmit();\n        }} />\n      </View>\n      {errors.privateKey && (\n        <Text className=\"error-message\">{errors.privateKey.message}</Text>\n        )}\n\n    </View>\n  );\n}\nfunction ShowBalance (){\n  return(\n    <Text>Your Balance: </Text>\n  );\n}\nfunction ShowTransactions(){\n  return(\n    <Text style={styles.Transactions}>Show Transactions </Text>\n  );\n}\n\nexport default function SendForm({ address, balance, privateKey, withdraw }) {\n    const { isShowing, toggle } = useModal(false);\n    const [txid, setTxId] = useState();\n    const [fee, setFee] = useState();\n    const [loading, setLoading] = useState(false);\n    const [type, setType] = useState();\n    const url =`https://insight.smartcash.cc/tx/${txid}`;\n\n    const {\n      register,\n      handleSubmit,\n      errors,\n      setError,\n      setValue,\n      formState,\n      triggerValidation,\n      getValues,\n    } = useForm({ mode: \"onChange\", defaultValues: {\n        amount: withdraw ? Number(balance - 0.002).toFixed(4) : null\n      } });\n\n      React.useEffect(() => { \n        register({ name: 'addressOrPrivateKey'}, { required: true });     \n      }, [register]);\n\n      const onSubmit = (data) => {\n        setLoading(true);\n        createAndSendRawTransaction(\n          data?.addressTo,\n          Number(data?.amount),\n          String(privateKey || data?.privateKey)\n        )\n          .then((data) => setTxId(data?.txid))\n          .catch((error) => setError(error[0]?.message))\n          .finally(() => setLoading(false));\n      };\n    \n      const getFeeFromSAPI = (amount) => {\n        getFee(Number(amount), address).then((fee) => {\n          setFee(fee);\n          if (fee && Number(getValues(\"amount\")) + fee > balance) {\n            setError(\"amount\", \"invalid\", \"Requested amount exceeds balance\");\n          }\n        });\n      };\n\n      if (setTxId) {\n        return (\n          <View >\n            <Text>Amount has been sent</Text>\n            <WebView\n                ref={(ref) => { webview = ref; }}\n                source={{ url }}\n                onNavigationStateChange={(event) => {\n                  if (event.url !== url) {\n                  this.webview.stopLoading();\n                  Linking.openURL(event.url);\n                  }}\n                }>\n              {txid}\n              <Text>(click to view details)</Text>\n              </WebView>\n            <Button title=\"Refress\"onClick={() => {}}>Refresh Page</Button>\n          </View>\n        );\n      }\n\n   return (\n    <>\n      <form\n        onSubmit={handleSubmit(onSubmit)}\n        className=\"formGroup\"\n        autoComplete=\"off\"\n      >\n\n    <KeyboardAvoidingView behavior='position'>\n      <ScrollView style={styles.container}>\n        <View style={styles.card}>\n          <View style={styles.adress}>\n            <Text style={styles.adress}>Your Address or Private Key</Text>\n              \n            <TouchableHighlight\n                onPress={() => {\n                  this.setModalVisible(!modalVisible);\n                }}\n                >\n              <View style={styles.qr}>\n                <Modal/>       \n              </View>                \n              </TouchableHighlight>\n\n          </View>\n               \n            <TextInput \n              style={styles.text}\n                onChangeText={text => setValue('addressOrPrivateKey', text, true)}\n                autoComplete=\"off\"\n                ref={register({\n                  required: true,\n                  //validate: AddressPKValidation,\n                  })}\n                  onInput={() => triggerValidation(\"addressTo\")}\n              placeholder=\"________________________________________________\">\n               \n            </TextInput>\n        </View>\n        \n        <View>\n\n          <View style={styles.ShowContent}>\n            \n            <ShowBalance/>\n\n            <TouchableHighlight onPress={() => {}}>\n              <ShowTransactions/>\n            </TouchableHighlight>\n           \n          </View>\n          \n          <View style={styles.contentCard} style={styles.card } >\n            <ShowSend/> \n          </View>\n\n        </View>\n\n      </ScrollView>\n    </KeyboardAvoidingView>\n    </form>\n    </>\n  );\n}\n\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#f1f1f1',\n    },\n    ShowContent:{\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      padding:5\n    },\n    Transactions:{\n      backgroundColor:'#f1f1f1',\n      shadowOffset: { width: -1, height:5} ,\n      shadowOpacity: 0.09,\n      padding:10,\n      marginTop:-10\n    },\n    text: {\n      padding: 10,\n      color: 'rgba(0,0,0,0.6)',\n      fontSize: 15,\n      lineHeight:20,\n    },\n    Balance:{\n      marginLeft:10,\n      marginTop:1,\n      marginBottom:5\n    },\n    adress: {\n        marginTop:'2%',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n    },  \n    qr: {\n      backgroundColor: '#fff'\n    },\n    Button:{\n      borderRadius: 50,\n    },\n    card: {\n      marginTop: 10,\n      marginBottom: 20,\n      marginLeft: 12,\n      marginRight: 12,\n      shadowColor: 'black',\n      shadowOffset: { width: -1, height: 2},\n      shadowOpacity: 0.26,\n      shadowRadius: 5,\n      backgroundColor:'#fff',\n      padding:20,\n    },\n    contentCard:{\n      marginBottom: 20,\n      backgroundColor:'#fff',\n      padding:10,\n      shadowColor: 'black',\n      shadowOffset: { width: -1, height: 10},\n      shadowOpacity: 0.09,\n    }\n  });\n  "]},"metadata":{},"sourceType":"module"}