{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/enricrypto/git2020/smarthub_local_mobile/components/SendRight.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Modal from \"./Modal\";\nimport { getBalance, getAddress, createNewWalletKeyPair } from \"../lib/sapi\";\nimport { isAddress, isPK } from \"../lib/smart\";\nimport { useForm } from \"react-hook-form\";\nimport useModal from \"../util/useModal\";\nimport WebView from \"react-native-web/dist/exports/WebView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport SendForm from \"./SendForm\";\n\nfunction SendRight() {\n  var _this = this;\n\n  var url = \"https://insight.smartcash.cc/address/\" + address;\n\n  var _useModal = useModal(false),\n      isShowing = _useModal.isShowing,\n      toggle = _useModal.toggle;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      privateKey = _useState4[0],\n      setPrivateKey = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      balance = _useState6[0],\n      setBalance = _useState6[1];\n\n  var _useForm = useForm({\n    mode: \"onChange\"\n  }),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      setError = _useForm.setError,\n      setValue = _useForm.setValue,\n      formState = _useForm.formState,\n      triggerValidation = _useForm.triggerValidation;\n\n  var getBalanceFromSAPI = function getBalanceFromSAPI(address) {\n    setBalance(\"Loading Balance\");\n    getBalance(address).then(function (res) {\n      return setBalance(res.balance);\n    }).catch(function (error) {\n      return setBalance(\"Error loading balance\");\n    });\n  };\n\n  var AddressPKValidation = function AddressPKValidation(value) {\n    var isValid;\n    return _regeneratorRuntime.async(function AddressPKValidation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            isValid = false;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(isAddress(value).then(function (data) {\n              setAddress(data);\n              getBalanceFromSAPI(data);\n              isValid = true;\n            }).catch(function (data) {\n              return data;\n            }));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(isPK(value).then(function () {\n              var address = getAddress(value);\n              setAddress(address);\n              setPrivateKey(value);\n              getBalanceFromSAPI(address);\n              isValid = true;\n            }).catch(function (data) {\n              return data;\n            }));\n\n          case 5:\n            if (!isValid) {\n              setError(\"address\", \"invalid\", \"Invalid Address\");\n            }\n\n            return _context.abrupt(\"return\", isValid);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.contentCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.adress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Your Address or Private Key \"), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      _this.setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.qr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, React.createElement(Modal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })))), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return setValue('address', text, true);\n    },\n    title: \"text\",\n    autoComplete: \"off\",\n    ref: register({\n      required: true,\n      validate: AddressPKValidation\n    }),\n    onInput: function onInput() {\n      return triggerValidation(\"addressTo\");\n    },\n    placeholder: \"_________________________________________________\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), errors.address && React.createElement(Text, {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, errors.address.message))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, formState.isValid ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Your Balance: \", balance))), React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, React.createElement(SendForm, {\n    address: address,\n    balance: balance,\n    privateKey: privateKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })))) : null));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f1f1f1'\n  },\n  input: {\n    padding: 10,\n    color: 'rgba(0,0,0,0.6)',\n    fontSize: 15,\n    lineHeight: 20\n  },\n  adress: {\n    marginTop: '2%',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  qr: {\n    backgroundColor: '#fff',\n    marginRight: 10\n  },\n  card: {\n    marginTop: 10,\n    marginBottom: 20,\n    marginLeft: 12,\n    marginRight: 12,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: -1,\n      height: 2\n    },\n    shadowOpacity: 0.26,\n    shadowRadius: 5,\n    backgroundColor: '#fff',\n    padding: 10\n  },\n  contentCard: {\n    marginBottom: 20,\n    backgroundColor: '#fff',\n    padding: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: -1,\n      height: 10\n    },\n    shadowOpacity: 0.09,\n    width: 325\n  },\n  text: {\n    marginLeft: 12,\n    marginRight: 200,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: -1,\n      height: 2\n    },\n    shadowOpacity: 0.26,\n    shadowRadius: 5,\n    backgroundColor: '#fff',\n    padding: 10\n  }\n});\nexport default SendRight;","map":{"version":3,"sources":["/Users/enricrypto/git2020/smarthub_local_mobile/components/SendRight.js"],"names":["React","useState","ScrollView","Modal","getBalance","getAddress","createNewWalletKeyPair","isAddress","isPK","useForm","useModal","SendForm","SendRight","url","address","isShowing","toggle","setAddress","privateKey","setPrivateKey","balance","setBalance","mode","register","errors","setError","setValue","formState","triggerValidation","getBalanceFromSAPI","then","res","catch","error","AddressPKValidation","value","isValid","data","styles","container","card","contentCard","adress","setModalVisible","modalVisible","qr","input","text","required","validate","message","StyleSheet","create","flex","backgroundColor","padding","color","fontSize","lineHeight","marginTop","flexDirection","justifyContent","marginRight","marginBottom","marginLeft","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, View, Button, Platform, StatusBar,Text,TouchableHighlight, TextInput } from 'react-native';\nimport { ScrollView,  } from 'react-native-gesture-handler';\nimport Modal from \"./Modal\";\nimport {getBalance, getAddress, createNewWalletKeyPair} from \"../lib/sapi\";\nimport { isAddress, isPK } from \"../lib/smart\";\nimport { useForm } from \"react-hook-form\";\nimport useModal from \"../util/useModal\";\nimport { WebView, Linking } from 'react-native';\nimport SendForm from './SendForm';\n\n function SendRight() {\n  const url = `https://insight.smartcash.cc/address/${address}`;\n\n  const { isShowing, toggle } = useModal(false);\n  const [address, setAddress] = useState();\n  const [privateKey, setPrivateKey] = useState();\n  const [balance, setBalance] = useState(false);\n  const {\n    register,\n    errors,\n    setError,\n    setValue,\n    formState,\n    triggerValidation,\n  } = useForm({\n    mode: \"onChange\",\n  });\n\n  const getBalanceFromSAPI = (address) => {\n    setBalance(\"Loading Balance\");\n    getBalance(address)\n      .then((res) => setBalance(res.balance))\n      .catch((error) => setBalance(\"Error loading balance\"));\n  };\n\n  const AddressPKValidation = async (value) => {\n    let isValid = false;\n\n    await isAddress(value)\n      .then(data => {\n        setAddress(data);\n        getBalanceFromSAPI(data);\n        isValid = true;\n      })\n      .catch(data => data);\n\n    await isPK(value)\n      .then(() => {\n        const address = getAddress(value);\n        setAddress(address);\n        setPrivateKey(value);\n        getBalanceFromSAPI(address);\n        isValid = true;\n      })\n      .catch(data => data);\n\n    if (!isValid) {\n      setError(\"address\", \"invalid\", \"Invalid Address\");\n    }\n\n    return isValid;\n  }\n\n  return(\n    <View style={styles.container}>\n      <View style={styles.card}>\n        <View style={styles.contentCard}>\n          <View style={styles.adress}>\n            <Text>Your Address or Private Key </Text>\n            <TouchableHighlight\n            onPress={() => {\n              this.setModalVisible(!modalVisible);\n            }}\n            >\n          <View style={styles.qr}>\n            <Modal/>\n          </View> \n\n          </TouchableHighlight>\n\n          </View>\n\n          <TextInput \n            style={styles.input}\n              onChangeText={text => setValue('address', text, true)}\n              title=\"text\"\n              autoComplete=\"off\"\n              ref={register({\n                required: true,\n                validate: AddressPKValidation,\n              })}\n            onInput={() => triggerValidation(\"addressTo\")}\n            placeholder=\"_________________________________________________\">\n              \n          </TextInput>\n          {errors.address && (\n            <Text className=\"error-message\">{errors.address.message}</Text>\n          )}\n        </View>\n      </View>\n      <View>\n        {formState.isValid ? (\n        <View>\n          <View >\n\n            <View>\n              <Text style={styles.text}>Your Balance: {balance}</Text>\n                \n            </View>\n          </View>\n\n            <View style={styles.container}>\n\n              <View >\n                <SendForm address={address} balance={balance} privateKey={privateKey}/>\n              </View>\n\n            </View>\n\n          </View>\n        ) : null}\n      </View>\n  </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f1f1f1',\n  },\n  input: {\n    padding: 10,\n    color: 'rgba(0,0,0,0.6)',\n    fontSize: 15,\n    lineHeight:20,\n  },\n  adress: {\n    marginTop:'2%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },  \n  qr: {\n    backgroundColor: '#fff',\n    marginRight:10\n  },\n  card: {\n    marginTop: 10,\n    marginBottom: 20,\n    marginLeft: 12,\n    marginRight: 12,\n    shadowColor: 'black',\n    shadowOffset: { width: -1, height: 2},\n    shadowOpacity: 0.26,\n    shadowRadius: 5,\n    backgroundColor:'#fff',\n    padding:10,\n  },\n  contentCard:{\n    marginBottom: 20,\n    backgroundColor:'#fff',\n    padding:10,\n    shadowColor: 'black',\n    shadowOffset: { width: -1, height: 10},\n    shadowOpacity: 0.09,\n    width:325\n\n  },\n  text:{\n    marginLeft: 12,\n    marginRight: 200,\n    shadowColor: 'black',\n    shadowOffset: { width: -1, height: 2},\n    shadowOpacity: 0.26,\n    shadowRadius: 5,\n    backgroundColor:'#fff',\n    padding:10,\n  },\n});\nexport default SendRight;"]},"metadata":{},"sourceType":"module"}